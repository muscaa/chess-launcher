plugins {
	id "maven-publish"
}

allprojects {
	apply plugin: "eclipse"
	apply plugin: "idea"
	
	idea {
		module {
			outputDir file("build/classes/java/main")
			testOutputDir file("build/classes/java/test")
		}
	}
}

configure(subprojects) {
	apply plugin: "java-library"
}

subprojects {
    beforeEvaluate {
    	[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
    	
    	sourceCompatibility = 17
		targetCompatibility = 17
    	
        repositories {
			mavenCentral()
			maven { url "https://jitpack.io" }
		}
		
		configurations {
		    include {
		        canBeResolved = true
		        canBeConsumed = false
		    }
		    
		    runtimeClasspath.extendsFrom(include)
		    compileClasspath.extendsFrom(include)
		}
    }
    
    afterEvaluate {
        eclipse.project.name = "${projectName}-${subName}"
        
		jar {
			archiveFileName.set("${subName}.jar")
			
			into("META-INF") {
	            from("${rootProject.projectDir}/LICENSE")
	            from("${rootProject.projectDir}/NOTICE")
	        }
		}
		
		java {
			withSourcesJar()
			withJavadocJar()
		}
    }
    
    tasks.register("bundle", Zip) {
	    destinationDirectory.set(file("${buildDir}/libs"))
	    archiveFileName.set("${subName}-bundle.zip")
		
	    from(tasks.named("jar")) {
	        into("lib")
	    }
		
	    from(configurations.include) {
	        into("lib")
	    }
	}
	
	tasks.named("jar") {
	    finalizedBy("bundle")
	}
}

def core = project(":core")

publishing {
    publications {
        maven(MavenPublication) {
			from core.components.java
			
			artifact(core.tasks.named("bundle")) {
                classifier = "bundle"
            }
        }
    }
}
